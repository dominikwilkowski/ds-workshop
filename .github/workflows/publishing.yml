name: Publishing

on:
  push:
    branches:
      - main
  workflow_run:
    branches: [main]
    workflows: ["Testing"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: '12.x'

      - name: Get yarn cache
        id: yarn-cache
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # DEBUGGING INFOS
      # - name: Dump GitHub context
      #   env:
      #     GITHUB_CONTEXT: ${{ toJSON(github) }}
      #   run: echo "$GITHUB_CONTEXT"
      # - name: Dump job context
      #   env:
      #     JOB_CONTEXT: ${{ toJSON(job) }}
      #   run: echo "$JOB_CONTEXT"
      # - name: Dump steps context
      #   env:
      #     STEPS_CONTEXT: ${{ toJSON(steps) }}
      #   run: echo "$STEPS_CONTEXT"
      # - name: Dump runner context
      #   env:
      #     RUNNER_CONTEXT: ${{ toJSON(runner) }}
      #   run: echo "$RUNNER_CONTEXT"
      # - name: Dump strategy context
      #   env:
      #     STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
      #   run: echo "$STRATEGY_CONTEXT"
      # - name: Dump matrix context
      #   env:
      #     MATRIX_CONTEXT: ${{ toJSON(matrix) }}
      #   run: echo "$MATRIX_CONTEXT"

      - name: Node version
        run: node --version
      - name: npm version
        run: npm --version
      - name: Yarn version
        run: yarn --version

      - run: yarn install --frozen-lockfile
      - run: yarn build
        env:
          NEXT_PUBLIC_LIVE_SITE: 'true'
      - run: yarn export

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out
